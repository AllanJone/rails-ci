# These are all the cops that are disabled in the default configuration.
# encrypt email function uses dynamic finder method, so disabling this check
Rails/InverseOf:
  Enabled: false

Style/MethodCalledOnDoEndBlock:
  Description: "Avoid chaining a method call on a do...end block."
  Enabled: false

Style/Documentation:
  Description: "Document classes and non-namespace modules."
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

Style/AccessModifierDeclarations:
  Enabled: false

Style/ParallelAssignment:
  Enabled: false

Layout/FirstMethodArgumentLineBreak:
  Description: >-
                 Checks for a line break before the first argument in a
                 multi-line method call.
  Enabled: false
  VersionAdded: '0.49'

Layout/FirstMethodParameterLineBreak:
  Description: >-
                 Checks for a line break before the first parameter in a
                 multi-line method parameter definition.
  Enabled: false
  VersionAdded: '0.49'

#################### Lint ################################
### Warnings
Lint/AmbiguousOperator:
  Description: >-
                 Checks for ambiguous operators in the first argument of a
                 method invocation without parentheses.
  StyleGuide: '#method-invocation-parens'
  Enabled: false
  VersionAdded: '0.17'

#################### Performance ################################

Performance/Caller:
  Description: >-
             Use `caller(n..n)` instead of `caller`.
  Enabled: false
  VersionAdded: '0.49'

#################### Style ################################

Style/ClassAndModuleChildren:
  Description: 'Checks style of children classes and modules.'
  StyleGuide: '#namespace-definition'
  # Moving from compact to nested children requires knowledge of whether the
  # outer parent is a module or a class. Moving from nested to compact requires
  # verification that the outer parent is defined elsewhere. Rubocop does not
  # have the knowledge to perform either operation safely and thus requires
  # manual oversight.
  SafeAutoCorrect: false
  AutoCorrect: false
  Enabled: false
  VersionAdded: '0.19'
  #
  # Basically there are two different styles:
  #
  # `nested` - have each child on a separate line
  #   class Foo
  #     class Bar
  #     end
  #   end
  #
  # `compact` - combine definitions as much as possible
  #   class Foo::Bar
  #   end
  #
  # The compact style is only forced, for classes or modules with one child.
  EnforcedStyle: nested
  SupportedStyles:
    - nested
    - compact

Style/AsciiComments:
  Enabled: false

#################### Rails ################################
Rails/ReflectionClassName:
  Description: 'Use a string for `class_name` option value in the definition of a reflection.'
  Enabled: false
  VersionAdded: '0.64'

Rails/HasManyOrHasOneDependent:
  Description: 'Define the dependent option to the has_many and has_one associations.'
  StyleGuide: 'https://github.com/rubocop-hq/rails-style-guide#has_many-has_one-dependent-option'
  Enabled: false
  VersionAdded: '0.50'
  Include:
    - app/models/**/*.rb

Rails/LexicallyScopedActionFilter:
  Description: "Checks that methods specified in the filter's `only` or `except` options are explicitly defined in the controller."
  StyleGuide: 'https://github.com/rubocop-hq/rails-style-guide#lexically-scoped-action-filter'
  Enabled: false
  VersionAdded: '0.52'
  Include:
    - app/controllers/**/*.rb
